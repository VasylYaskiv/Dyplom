using UnityEngine;

public class PlayerAttack : MonoBehaviour
{
    // Змінні для шкоди та кулдауну атак
    public float lightAttackDamage = 5f;
    public float heavyAttackDamage = 10f;

    public float lightAttackCooldown = 2f;  // Час кулдауну після 4 легких атак
    public float heavyAttackCooldown = 2f;  // Час кулдауну після 3 важких атак

    public int maxLightCombo = 4;   // Кількість легких атак підряд
    public int maxHeavyCombo = 3;   // Кількість важких атак підряд

    private float lastLightAttackTime;   // Час останньої легкої атаки
    private float lastHeavyAttackTime;   // Час останньої важкої атаки

    private int currentLightCombo = 0;   // Лічильник виконаних легких атак
    private int currentHeavyCombo = 0;   // Лічильник виконаних важких атак

    // Радіус атаки
    public float attackRange = 1f;
    public LayerMask attackableLayer;  // Шар ворогів і бочок, які можна атакувати

    void Update()
    {
        // Легка атака (ЛКМ)
        if (Input.GetMouseButtonDown(0))  // ЛКМ - код 0
        {
            if (Time.time - lastLightAttackTime >= lightAttackCooldown && currentLightCombo < maxLightCombo)
            {
                LightAttack();
                lastLightAttackTime = Time.time;
                currentLightCombo++;
            }
            else if (currentLightCombo >= maxLightCombo)
            {
                // Якщо досягнуто максимальну кількість атак, ставимо кулдаун
                if (Time.time - lastLightAttackTime >= lightAttackCooldown)
                {
                    currentLightCombo = 0;  // Скидаємо лічильник після кулдауну
                }
                else
                {
                    Debug.Log("Light attack is on cooldown.");
                }
            }
        }

        // Важка атака (ПКМ)
        if (Input.GetMouseButtonDown(1))  // ПКМ - код 1
        {
            if (Time.time - lastHeavyAttackTime >= heavyAttackCooldown && currentHeavyCombo < maxHeavyCombo)
            {
                HeavyAttack();
                lastHeavyAttackTime = Time.time;
                currentHeavyCombo++;
            }
            else if (currentHeavyCombo >= maxHeavyCombo)
            {
                // Якщо досягнуто максимальну кількість атак, ставимо кулдаун
                if (Time.time - lastHeavyAttackTime >= heavyAttackCooldown)
                {
                    currentHeavyCombo = 0;  // Скидаємо лічильник після кулдауну
                }
                else
                {
                    Debug.Log("Heavy attack is on cooldown.");
                }
            }
        }
    }

    // Метод для виконання легкої атаки
    void LightAttack()
    {
        Debug.Log("Light attack performed! Damage: " + lightAttackDamage);
        DealDamage(lightAttackDamage);
    }

    // Метод для виконання важкої атаки
    void HeavyAttack()
    {
        Debug.Log("Heavy attack performed! Damage: " + heavyAttackDamage);
        DealDamage(heavyAttackDamage);
    }

    // Метод для нанесення шкоди об'єктам
    void DealDamage(float damage)
    {
        // Шукаємо всі об'єкти в радіусі атаки
        Collider2D[] hitObjects = Physics2D.OverlapCircleAll(transform.position, attackRange, attackableLayer);

        // Перебираємо всі об'єкти та наносимо їм шкоду
        foreach (Collider2D hitObject in hitObjects)
        {
            // Перевіряємо чи об'єкт має компонент Health
            Health health = hitObject.GetComponent<Health>();
            if (health != null)
            {
                health.TakeDamage(damage);
            }
        }
    }

    // Малюємо радіус атаки для зручності налаштувань
    private void OnDrawGizmosSelected()
    {
        Gizmos.color = Color.red;
        Gizmos.DrawWireSphere(transform.position, attackRange);
    }
}
